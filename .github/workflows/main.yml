name: Unit Tests # name of the test

on: [push] # the Github Action will activate "on" the event that you "push" to the repo

jobs: # the things being executed
  tests: # the name of your status check, will become important when you do branch protection
    runs-on: ubuntu-latest # which device on Github's server that you are running the Actions on
    steps:
      - uses: actions/checkout@v4 # using version 4 of Actions
      - name: Install Dependencies
        run: npm install
      - name: Install JSDoc
        run: npm install -g jsdoc
      - name: Set permissions for output directory
        run: chmod -R 777 ./jsdoc-filestore
      - name: Unit Test
        run: npm test ./__tests__/unit.test.js # the actual testing line
      - name: Default Storage Test
        run: npm test ./source/modules/models/filestore.test.js # This should run the tests in filestore.js
      - name: Build JSDoc for filestore
        run: jsdoc ./source/modules/models/fileStore.js -d ./jsdoc-filestore
      - name: commit changes
        run: |
            git config --global user.email "p7chang@ucsd.edu"
            git config --global user.name "Peter Chang"
            git add jsdoc-filestore
            git commit -m "Add new file via GitHub Actions"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: ${{ github.ref }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
      #  uses: andstor/jsdoc-action@v1
      #  with:
      #    source_dir: ./source/modules/models
      #    recurse: true
      #    output_dir: ./jsdoc-filestoreTest
      #- name: Codacy Analysis CLI #Codacy standard test
      #  uses: codacy/codacy-analysis-cli-action@v4.4.0
      #- name: generate JSDoc page
      #  run: jsdoc functions.js
